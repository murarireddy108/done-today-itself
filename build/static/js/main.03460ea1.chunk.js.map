{"version":3,"sources":["hooks/useLocalStorageState.js","hooks/useInputState.js","components/HashTagSelector.jsx","components/Goal.jsx","components/CheckBoxComp.jsx","components/SelectTagFilters.jsx","components/GoalList.jsx","components/NewGoalForm.jsx","components/Chart.js","App.js","index.js"],"names":["useLocalStorageState","key","defaultVal","useState","val","JSON","parse","window","localStorage","getItem","e","state","setState","useEffect","setItem","stringify","useInputState","initialVal","value","setValue","target","useStyles","makeStyles","theme","button","margin","spacing","HashTagSelector","hashTags","setHashTags","globalHashTags","classes","colors","red","pink","green","purple","blue","teal","lime","yellow","grey","deepOrange","map","globalHashTag","_id","ColorButton","withStyles","root","color","palette","getContrastText","backgroundColor","Button","className","size","onClick","hashTag","prevHashTags","variant","tag","borderColor","EditGoal","goal","setGoals","setEditing","paper","marginBottom","display","flexWrap","paddingLeft","paddingRight","textField","marginLeft","marginRight","width","fab","fabContainer","justifyContent","buttons","paddingBottom","btn","name","setName","description","desc","setDesc","Paper","elevation","onSubmit","preventDefault","prevGoals","prevGoal","Typography","component","gutterBottom","align","style","fontSize","marginTop","TextField","id","label","fullWidth","required","onChange","type","Goal","padding","TitleAndOptionsContainer","startButton","fontWeight","React","modalOpen","setModalOpen","useTheme","fullScreen","useMediaQuery","breakpoints","down","editing","isActive","duration","Date","getTime","latestStartTimeStamp","displaySeconds","setDisplaySeconds","anchorEl","setAnchorEl","open","Boolean","handleCloseMenu","myInterval","setInterval","prevDisplaySeconds","clearInterval","handleStartPause","handleClose","IconButton","aria-label","aria-controls","aria-haspopup","event","currentTarget","Menu","keepMounted","onClose","MenuItem","ListItemIcon","humanizeDuration","round","length","chips","push","renderHashTags","startIcon","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","goalId","filter","CheckBoxComp","selectedHastagIds","setSelectedHashTagIds","FormControlLabel","control","Checkbox","checked","prevHashTagIds","SelectTagFilters","FormGroup","row","paddingTop","searchFilterDiv","input","searchBarRoot","searchIconContainer","alignItems","checkBoxContainer","GoalList","goals","searchText","setSearchText","filteredGoals","setFilteredGoals","sortedGoals","setSortedGoals","textFilter","trim","toLowerCase","includes","tagFilter","Object","keys","InputBase","placeholder","inputProps","MenuList","sort","a","b","duration1","NewGoalForm","resetName","resetDesc","newGoal","uuidv4","timeAdded","Fab","Chart","history","useHistory","data","labels","datasets","options","legend","title","text","scales","yAxes","gridLines","ticks","beginAtZero","navItemsRight","ElevationScroll","props","children","trigger","useScrollTrigger","disableHysteresis","threshold","undefined","cloneElement","App","darkState","setDarkState","paletteType","arcBlue","arcOrange","createMuiTheme","common","orange","primary","main","secondary","overrides","MuiTableCell","head","2","4","0","1","CssBaseline","ThemeProvider","AppBar","Toolbar","Container","Box","my","path","exact","render","routeProps","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.03460ea1.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\nfunction useLocalStorageState(key, defaultVal) {\n  const [state, setState] = useState(() => {\n    let val;\n    try {\n      val = JSON.parse(window.localStorage.getItem(key)) || defaultVal;\n    } catch (e) {\n      val = defaultVal;\n    }\n    return val;\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [state, key]);\n  return [state, setState];\n}\n\nexport default useLocalStorageState;\n","import { useState } from \"react\";\n\nconst useInputState = (initialVal) => {\n  const [value, setValue] = useState(initialVal);\n  const handleChange = (e) => {\n    setValue(e.target.value);\n  };\n  const reset = () => {\n    setValue(\"\");\n  };\n  return [value, handleChange, reset];\n};\nexport default useInputState;\n","import React from \"react\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  red,\n  pink,\n  green,\n  purple,\n  blue,\n  teal,\n  lime,\n  yellow,\n  grey,\n  deepOrange,\n} from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\nfunction HashTagSelector({ hashTags, setHashTags, globalHashTags }) {\n  const classes = useStyles();\n\n  const handleAddHashTag = (hashTag) => {\n    setHashTags((prevHashTags) => {\n      return { ...prevHashTags, [hashTag._id]: hashTag };\n    });\n  };\n  const handleRemoveHashTag = (hashTag) => {\n    setHashTags((prevHashTags) => {\n      delete prevHashTags[hashTag._id];\n      return { ...prevHashTags };\n    });\n  };\n\n  const colors = {\n    red,\n    pink,\n    green,\n    purple,\n    blue,\n    teal,\n    lime,\n    yellow,\n    grey,\n    deepOrange,\n  };\n\n  return (\n    <div>\n      {globalHashTags.map((globalHashTag) => {\n        if (hashTags[globalHashTag._id]) {\n          const ColorButton = withStyles((theme) => ({\n            root: {\n              color: theme.palette.getContrastText(\n                colors[globalHashTag.color][500]\n              ),\n              backgroundColor: colors[globalHashTag.color][500],\n              \"&:hover\": {\n                backgroundColor: colors[globalHashTag.color][700],\n              },\n            },\n          }))(Button);\n\n          return (\n            <ColorButton\n              className={classes.button}\n              size=\"small\"\n              key={globalHashTag._id}\n              onClick={() => {\n                handleRemoveHashTag(globalHashTag);\n              }}\n              variant=\"outlined\"\n            >\n              {globalHashTag.tag}\n            </ColorButton>\n          );\n        } else {\n          const ColorButton = withStyles((theme) => ({\n            root: {\n              color: colors[globalHashTag.color][500],\n              backgroundColor: \"rgba(0,0,0,0)\",\n              borderColor: colors[globalHashTag.color][500],\n              \"&:hover\": {\n                backgroundColor: colors[globalHashTag.color][700],\n                color: theme.palette.getContrastText(\n                  colors[globalHashTag.color][500]\n                ),\n                borderColor: colors[globalHashTag.color][700],\n              },\n            },\n          }))(Button);\n\n          return (\n            <ColorButton\n              className={classes.button}\n              size=\"small\"\n              key={globalHashTag._id}\n              onClick={() => {\n                handleAddHashTag(globalHashTag);\n              }}\n              variant=\"outlined\"\n            >\n              {globalHashTag.tag}\n            </ColorButton>\n          );\n        }\n      })}\n    </div>\n  );\n}\n\nexport default HashTagSelector;\n","import React, { useEffect, useState } from \"react\";\nimport humanizeDuration from \"humanize-duration\";\n\nimport useInputState from \"../hooks/useInputState\";\nimport HashTagSelector from \"./HashTagSelector\";\n\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\nimport PauseIcon from \"@material-ui/icons/Pause\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport {\n  red,\n  pink,\n  green,\n  purple,\n  blue,\n  teal,\n  lime,\n  yellow,\n  grey,\n  deepOrange,\n} from \"@material-ui/core/colors\";\n\nconst colors = {\n  red,\n  pink,\n  green,\n  purple,\n  blue,\n  teal,\n  lime,\n  yellow,\n  grey,\n  deepOrange,\n};\n\nfunction EditGoal({ goal, setGoals, globalHashTags, setEditing }) {\n  const useStyles = makeStyles((theme) => ({\n    paper: {\n      marginBottom: theme.spacing(3),\n    },\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3),\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: \"25ch\",\n    },\n    fab: {\n      marginRight: theme.spacing(2),\n      marginBottom: theme.spacing(2),\n    },\n    fabContainer: {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n    },\n    buttons: {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      paddingBottom: theme.spacing(2),\n    },\n    btn: {\n      marginRight: theme.spacing(2),\n    },\n  }));\n  const classes = useStyles();\n  const [name, setName, resetName] = useInputState(goal.name);\n  const [desc, setDesc, resetDesc] = useInputState(goal.description);\n  const [hashTags, setHashTags] = useState(goal.hashTags);\n\n  const handleUpdateGoal = (e) => {\n    e.preventDefault();\n    setGoals((prevGoals) => {\n      return prevGoals.map((prevGoal) => {\n        if (goal._id !== prevGoal._id) {\n          return prevGoal;\n        }\n        return { ...prevGoal, name, description: desc, hashTags };\n      });\n    });\n    setEditing(false);\n  };\n\n  const handleCancel = () => {\n    setEditing(false);\n  };\n\n  return (\n    <Paper elevation={2} className={classes.paper}>\n      <form onSubmit={handleUpdateGoal}>\n        <div className={classes.root}>\n          <Typography\n            variant=\"h1\"\n            component=\"h1\"\n            gutterBottom\n            align=\"center\"\n            style={{ fontSize: \"3rem\", marginTop: \"1.5rem\" }}\n          >\n            You're in the edit mode ;)\n          </Typography>\n          {/* <label>Name</label>\n      <input value={name} required onChange={setName} /> */}\n          <TextField\n            id=\"asdf9wje9r\"\n            label=\"Goal title\"\n            style={{ margin: 8 }}\n            fullWidth\n            margin=\"dense\"\n            value={name}\n            required\n            onChange={setName}\n          />\n          {/* <br />\n        <label>Description</label>\n        <input value={desc} onChange={setDesc} /> */}\n          {/* <br /> */}\n          <TextField\n            id=\"standard-fuadasdll-width-2\"\n            label=\"Goal description\"\n            style={{ margin: 8 }}\n            fullWidth\n            margin=\"dense\"\n            value={desc}\n            onChange={setDesc}\n          />\n          <HashTagSelector\n            hashTags={hashTags}\n            setHashTags={setHashTags}\n            globalHashTags={globalHashTags}\n          />\n        </div>\n        <div className={classes.buttons}>\n          <Button\n            className={classes.btn}\n            color=\"secondary\"\n            type=\"button\"\n            onClick={handleCancel}\n            variant=\"contained\"\n            size=\"large\"\n          >\n            Cancel\n          </Button>\n          <Button\n            className={classes.btn}\n            variant=\"contained\"\n            type=\"submit\"\n            size=\"large\"\n          >\n            save\n          </Button>\n        </div>\n      </form>\n    </Paper>\n  );\n}\n\nfunction Goal({ goal, setGoals, globalHashTags }) {\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      padding: theme.spacing(2),\n      marginBottom: theme.spacing(3),\n    },\n    TitleAndOptionsContainer: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n    },\n    hashTag: {\n      margin: theme.spacing(1),\n    },\n    startButton: {\n      marginLeft: theme.spacing(1),\n      marginTop: theme.spacing(2),\n    },\n    desc: {\n      fontSize: \"1.2rem\",\n      fontWeight: \"100\",\n    },\n  }));\n  const classes = useStyles();\n  const [modalOpen, setModalOpen] = React.useState(false);\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const [editing, setEditing] = useState(false);\n  const [displaySeconds, setDisplaySeconds] = useState(\n    goal.isActive\n      ? goal.duration +\n          (new Date().getTime() -\n            new Date(goal.latestStartTimeStamp).getTime()) /\n            1000\n      : goal.duration\n  );\n\n  //3 dot menu\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleCloseMenu = () => {\n    setAnchorEl(null);\n  };\n\n  useEffect(() => {\n    let myInterval = setInterval(() => {\n      if (goal.isActive) {\n        setDisplaySeconds((prevDisplaySeconds) => prevDisplaySeconds + 1);\n      }\n    }, 1000);\n    return () => {\n      clearInterval(myInterval);\n    };\n  });\n\n  const handleStartPause = () => {\n    setGoals((prevGoals) => {\n      return prevGoals.map((prevGoal) => {\n        if (goal._id !== prevGoal._id) {\n          return prevGoal;\n        }\n\n        return {\n          ...prevGoal,\n          latestStartTimeStamp: !prevGoal.isActive ? new Date() : null,\n          ...(prevGoal.isActive && {\n            duration:\n              prevGoal.duration +\n              (new Date().getTime() -\n                new Date(prevGoal.latestStartTimeStamp).getTime()) /\n                1000,\n          }),\n          isActive: !prevGoal.isActive,\n        };\n      });\n    });\n  };\n\n  const handleClickOpen = () => {\n    setModalOpen(true);\n  };\n\n  const handleClose = () => {\n    setModalOpen(false);\n  };\n\n  const renderHashTags = (hashTags) => {\n    const chips = [];\n    for (let key in hashTags) {\n      const ColorButton = withStyles((theme) => ({\n        root: {\n          color: theme.palette.getContrastText(\n            colors[hashTags[key].color][500]\n          ),\n          backgroundColor: colors[hashTags[key].color][500],\n          \"&:hover\": {\n            backgroundColor: colors[hashTags[key].color][700],\n          },\n        },\n      }))(Button);\n\n      chips.push(\n        <ColorButton\n          className={classes.hashTag}\n          size=\"small\"\n          key={hashTags[key]._id}\n        >\n          {hashTags[key].tag}\n        </ColorButton>\n      );\n    }\n    return chips;\n  };\n\n  const handleDeleteGoal = (goalId) => {\n    setGoals((prevGoals) => {\n      return prevGoals.filter((prevGoal) => prevGoal._id !== goalId);\n    });\n    handleClose();\n  };\n\n  if (editing) {\n    return (\n      <EditGoal\n        goal={goal}\n        setGoals={setGoals}\n        globalHashTags={globalHashTags}\n        setEditing={setEditing}\n      />\n    );\n  }\n\n  return (\n    <Paper className={classes.root} elevation={2}>\n      <div className={classes.TitleAndOptionsContainer}>\n        <Typography variant=\"h4\" gutterBottom>\n          {goal.name}\n        </Typography>\n        <IconButton\n          aria-label=\"more\"\n          aria-controls=\"long-menu\"\n          aria-haspopup=\"true\"\n          onClick={handleClick}\n        >\n          <MoreVertIcon />\n        </IconButton>\n        <Menu\n          id=\"long-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={open}\n          onClose={handleCloseMenu}\n        >\n          <MenuItem\n            onClick={() => {\n              handleCloseMenu();\n              setEditing(true);\n            }}\n          >\n            <ListItemIcon>\n              <EditIcon fontSize=\"small\" />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">Edit</Typography>\n          </MenuItem>\n          <MenuItem\n            onClick={() => {\n              handleClickOpen();\n              handleCloseMenu();\n            }}\n          >\n            <ListItemIcon>\n              <DeleteIcon fontSize=\"small\" />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">Delete</Typography>\n          </MenuItem>\n        </Menu>\n      </div>\n      <Typography\n        variant=\"body1\"\n        className={classes.desc}\n        gutterBottom\n        style={{ fontSize: \"1.4rem\" }}\n      >\n        {goal.description}\n      </Typography>\n      {/* <p>{new Date(goal.timeAdded).toString()}</p> */}\n      <Typography variant=\"overline\" component=\"p\" gutterBottom>\n        {\" \"}\n        You have spent{\" \"}\n        {humanizeDuration(displaySeconds * 1000, { round: true })} on this task\n      </Typography>\n      {goal?.hashTags &&\n        goal?.hashTags?.length !== 0 &&\n        renderHashTags(goal.hashTags)}\n\n      {/* <p>Duration variable - {goal.duration}</p> */}\n      {/* <Button variant=\"contained\" color=\"primary\" onClick={handleStartPause}>\n        {goal.isActive ? \"pause\" : \"start\"}\n      </Button> */}\n      <div className={classes.startButton}>\n        {goal.isActive ? (\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            className={classes.button}\n            startIcon={<PauseIcon />}\n            onClick={handleStartPause}\n          >\n            pause\n          </Button>\n        ) : (\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.button}\n            startIcon={<PlayArrowIcon />}\n            onClick={handleStartPause}\n          >\n            start\n          </Button>\n        )}\n      </div>\n      {/* <button type=\"button\" onClick={handleClickOpen}>\n        Delete Goal\n      </button> */}\n      {/* <button\n        onClick={() => {\n          setEditing(true);\n        }}\n      >\n        Edit Goal\n      </button> */}\n      <Dialog\n        fullScreen={fullScreen}\n        open={modalOpen}\n        onClose={handleClose}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">\n          {`Delete ${goal.name}?`}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>{goal.description}</DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose} color=\"default\">\n            No\n          </Button>\n          <Button\n            onClick={() => {\n              handleDeleteGoal(goal._id);\n            }}\n            color=\"secondary\"\n            autoFocus\n          >\n            Yes\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Paper>\n  );\n}\n\nexport default Goal;\n","import FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nfunction CheckBoxComp({ hashTag, selectedHastagIds, setSelectedHashTagIds }) {\n  const handleChange = () => {\n    if (selectedHastagIds[hashTag._id]) {\n      // return setSelectedHashTagIds((prevHashTagsIds) =>\n      //   prevHashTagsIds.filter((prevHashTagId) => hashTag._id !== prevHashTagId)\n      // );\n      return setSelectedHashTagIds((prevHashTagIds) => {\n        delete prevHashTagIds[hashTag._id];\n        return { ...prevHashTagIds };\n      });\n    }\n    setSelectedHashTagIds((prevHashTags) => {\n      return { ...prevHashTags, [hashTag._id]: true };\n    });\n  };\n\n  return (\n    <FormControlLabel\n      control={\n        <Checkbox\n          checked={selectedHastagIds[hashTag._id] ? true : false}\n          onChange={handleChange}\n        />\n      }\n      label={hashTag.tag}\n    />\n  );\n}\n\nexport default CheckBoxComp;\n","import FormGroup from \"@material-ui/core/FormGroup\";\n\nimport CheckBoxComp from \"./CheckBoxComp\";\n\nfunction SelectTagFilters({\n  selectedHastagIds,\n  setSelectedHashTagIds,\n  globalHashTags,\n}) {\n  const renderCheckboxes = () => {\n    return globalHashTags.map((hashTag) => (\n      <CheckBoxComp\n        key={hashTag._id}\n        hashTag={hashTag}\n        selectedHastagIds={selectedHastagIds}\n        setSelectedHashTagIds={setSelectedHashTagIds}\n      />\n    ));\n  };\n\n  return <FormGroup row>{renderCheckboxes()}</FormGroup>;\n}\n\nexport default SelectTagFilters;\n","import React, { useState, useEffect } from \"react\";\nimport Goal from \"./Goal\";\nimport useInputState from \"../hooks/useInputState\";\n\nimport SortIcon from \"@material-ui/icons/Sort\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nimport SelectTagFilters from \"./SelectTagFilters\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(0),\n    paddingRight: theme.spacing(0),\n    paddingTop: theme.spacing(2),\n  },\n  searchFilterDiv: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  input: {\n    width: \"90%\",\n  },\n  searchBarRoot: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    padding: theme.spacing(1),\n    paddingLeft: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    width: \"95%\",\n  },\n  searchIconContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  checkBoxContainer: {\n    padding: theme.spacing(2),\n  },\n}));\n\nfunction GoalList({ goals, setGoals, globalHashTags }) {\n  const classes = useStyles();\n  const [searchText, setSearchText, resetSearchText] = useInputState(\"\");\n  const [selectedHastagIds, setSelectedHashTagIds] = useState({});\n  const [filteredGoals, setFilteredGoals] = useState(goals);\n  const [sortedGoals, setSortedGoals] = useState(filteredGoals);\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  useEffect(() => {\n    setSortedGoals(filteredGoals);\n  }, [filteredGoals]);\n\n  useEffect(() => {\n    const textFilter = !searchText\n      ? goals\n      : goals.filter((goal) => {\n          if (\n            goal.name\n              .trim()\n              .toLowerCase()\n              .includes(searchText.trim().toLowerCase()) ||\n            goal.description\n              .trim()\n              .toLowerCase()\n              .includes(searchText.trim().toLowerCase())\n          ) {\n            return true;\n          }\n          return false;\n        });\n\n    const tagFilter =\n      Object.keys(selectedHastagIds).length === 0\n        ? textFilter\n        : textFilter.filter((goal) => {\n            for (let key in goal.hashTags) {\n              if (selectedHastagIds[key]) {\n                return true;\n              }\n            }\n            return false;\n          });\n\n    setFilteredGoals(tagFilter);\n  }, [searchText, goals, selectedHastagIds]);\n\n  const renderGoals = () => {\n    return sortedGoals.map((goal) => (\n      <Goal\n        goal={goal}\n        setGoals={setGoals}\n        globalHashTags={globalHashTags}\n        key={goal._id}\n      />\n    ));\n  };\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.searchFilterDiv}>\n        <Paper elevation={2} component=\"div\" className={classes.searchBarRoot}>\n          <InputBase\n            className={classes.input}\n            placeholder=\"Search Goals\"\n            inputProps={{ \"aria-label\": \"search Goals\" }}\n            value={searchText}\n            onChange={setSearchText}\n          />\n          <div className={classes.searchIconContainer}>\n            <SearchIcon />\n          </div>\n        </Paper>\n        <IconButton\n          aria-label=\"more\"\n          aria-controls=\"long-menu\"\n          aria-haspopup=\"true\"\n          onClick={handleClick}\n        >\n          <SortIcon />\n        </IconButton>\n      </div>\n      <div className={classes.checkBoxContainer}>\n        <Typography style={{ fontSize: \"1.5rem\" }}>\n          Select Hashtags to filter by\n        </Typography>\n        <SelectTagFilters\n          selectedHastagIds={selectedHastagIds}\n          setSelectedHashTagIds={setSelectedHashTagIds}\n          globalHashTags={globalHashTags}\n        />\n      </div>\n\n      <Menu\n        id=\"long-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={open}\n        onClose={handleClose}\n      >\n        <MenuList>\n          <MenuItem\n            onClick={() => {\n              setSortedGoals((prevGoals) => {\n                return prevGoals.sort(function (a, b) {\n                  const duration1 = a.isActive\n                    ? a.duration +\n                      (new Date().getTime() -\n                        new Date(a.latestStartTimeStamp).getTime()) /\n                        1000\n                    : a.duration;\n\n                  const duration2 = b.isActive\n                    ? b.duration +\n                      (new Date().getTime() -\n                        new Date(b.latestStartTimeStamp).getTime()) /\n                        1000\n                    : b.duration;\n                  return duration1 - duration2;\n                });\n              });\n              handleClose();\n            }}\n          >\n            <ListItemIcon>\n              <ArrowDownwardIcon fontSize=\"small\" />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">Time spent</Typography>\n          </MenuItem>\n          <MenuItem\n            onClick={() => {\n              setSortedGoals((prevGoals) => {\n                return prevGoals.sort(function (a, b) {\n                  const duration1 = a.isActive\n                    ? a.duration +\n                      (new Date().getTime() -\n                        new Date(a.latestStartTimeStamp).getTime()) /\n                        1000\n                    : a.duration;\n\n                  const duration2 = b.isActive\n                    ? b.duration +\n                      (new Date().getTime() -\n                        new Date(b.latestStartTimeStamp).getTime()) /\n                        1000\n                    : b.duration;\n                  return duration2 - duration1;\n                });\n              });\n              handleClose();\n            }}\n          >\n            <ListItemIcon>\n              <ArrowUpwardIcon fontSize=\"small\" />\n            </ListItemIcon>\n            <Typography variant=\"inherit\">Time spent</Typography>\n          </MenuItem>\n        </MenuList>\n      </Menu>\n      {renderGoals()}\n    </div>\n  );\n}\n\nexport default GoalList;\n\n\n","import { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport useInputState from \"../hooks/useInputState\";\nimport HashTagSelector from \"./HashTagSelector\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nimport Paper from \"@material-ui/core/Paper\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    paddingLeft: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: \"25ch\",\n  },\n  fab: {\n    marginRight: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n  fabContainer: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n}));\n\nfunction NewGoalForm({ setGoals, globalHashTags }) {\n  const classes = useStyles();\n\n  const [name, setName, resetName] = useInputState(\"\");\n  const [desc, setDesc, resetDesc] = useInputState(\"\");\n  const [hashTags, setHashTags] = useState({});\n  // time added assumed new Date() for now\n\n  const resetForm = () => {\n    resetName();\n    resetDesc();\n    setHashTags([]);\n  };\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n    const newGoal = {\n      _id: uuidv4(),\n      name,\n      description: desc,\n      timeAdded: new Date(),\n      hashTags,\n      duration: 0,\n      isActive: false,\n    };\n    setGoals((prevGoals) => {\n      return [...prevGoals, newGoal];\n    });\n    resetForm();\n  };\n\n  return (\n    <Paper elevation={2}>\n      <form onSubmit={handleFormSubmit}>\n        <div className={classes.root}>\n          <Typography\n            variant=\"h1\"\n            component=\"h1\"\n            gutterBottom\n            align=\"center\"\n            style={{ fontSize: \"4rem\", marginTop: \"1.5rem\" }}\n          >\n            Add a new task here!\n          </Typography>\n          <TextField\n            id=\"standard-full-width\"\n            label=\"Goal title\"\n            style={{ margin: 8 }}\n            fullWidth\n            margin=\"dense\"\n            value={name}\n            required\n            onChange={setName}\n          />\n          <TextField\n            id=\"standard-full-width-2\"\n            label=\"Goal description\"\n            style={{ margin: 8 }}\n            fullWidth\n            margin=\"dense\"\n            value={desc}\n            onChange={setDesc}\n          />\n\n          <HashTagSelector\n            hashTags={hashTags}\n            setHashTags={setHashTags}\n            globalHashTags={globalHashTags}\n          />\n        </div>\n        <div className={classes.fabContainer}>\n          <Fab\n            className={classes.fab}\n            color=\"primary\"\n            aria-label=\"add\"\n            type=\"submit\"\n          >\n            <AddIcon />\n          </Fab>\n        </div>\n      </form>\n    </Paper>\n  );\n}\n\nexport default NewGoalForm;\n\n// To Do - update Form with proper Goal structure\n// Validate Form\n","import React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { useHistory } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\n\nfunction Chart({ goals }) {\n  // const data = goals.map((goal) => {\n  //   return { x: goal.name, y: goal.duration };\n  // });\n  const history = useHistory();\n  const labels = goals.map((goal) => goal.name);\n  const label = \"Seconds\";\n  const data = {\n    labels,\n    datasets: [\n      {\n        label,\n        backgroundColor: goals.map((goal) => \"rgba(237, 132, 214, 0.5)\"),\n        data: goals.map((goal) =>\n          goal.isActive\n            ? goal.duration +\n              (new Date().getTime() -\n                new Date(goal.latestStartTimeStamp).getTime()) /\n                1000\n            : goal.duration\n        ),\n      },\n    ],\n  };\n  const options = {\n    legend: { display: false },\n    title: { display: true, text: \"Time spent per goal\" },\n    scales: {\n      yAxes: [\n        {\n          gridLines: {\n            display: true,\n          },\n          ticks: {\n            // callback: function (value, index, values) {\n            //   return abbreviateNumber(value);\n            // },\n            beginAtZero: true,\n          },\n        },\n      ],\n    },\n  };\n\n  return (\n    <div>\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={() => {\n          history.push(\"/\");\n        }}\n      >\n        Go Back\n      </Button>\n      <Bar data={data} options={options} />\n    </div>\n  );\n}\n\nexport default Chart;\n","import React from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport useLocalStorageState from \"./hooks/useLocalStorageState\";\n\nimport GoalList from \"./components/GoalList\";\nimport NewGoalForm from \"./components/NewGoalForm\";\nimport Chart from \"./components/Chart\";\n\nimport { Switch, Route, useHistory } from \"react-router-dom\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Brightness4Icon from \"@material-ui/icons/Brightness4\";\nimport Brightness7Icon from \"@material-ui/icons/Brightness7\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport PropTypes from \"prop-types\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\nimport Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(0),\n    paddingRight: theme.spacing(0),\n    paddingTop: theme.spacing(2),\n  },\n  searchFilterDiv: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  input: {\n    width: \"90%\",\n  },\n  searchBarRoot: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    padding: theme.spacing(1),\n    paddingLeft: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n    width: \"95%\",\n  },\n  searchIconContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  checkBoxContainer: {\n    padding: theme.spacing(2),\n  },\n  navItemsRight: {\n    margin: \"auto\",\n    marginRight: 0,\n  },\n}));\n\nfunction ElevationScroll(props) {\n  const { children, window } = props;\n  // Note that you normally won't need to set the window ref as useScrollTrigger\n  // will default to window.\n  // This is only being set here because the demo is in an iframe.\n  const trigger = useScrollTrigger({\n    disableHysteresis: true,\n    threshold: 0,\n    target: window ? window() : undefined,\n  });\n\n  return React.cloneElement(children, {\n    elevation: trigger ? 4 : 0,\n  });\n}\n\nElevationScroll.propTypes = {\n  children: PropTypes.element.isRequired,\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  window: PropTypes.func,\n};\n\nfunction App(props) {\n  const classes = useStyles();\n  const history = useHistory();\n  const [darkState, setDarkState] = useLocalStorageState(\"darkMode\", false);\n  const paletteType = darkState ? \"dark\" : \"light\";\n\n  const arcBlue = \"#ff4081\";\n  const arcOrange = \"#3d5afe\";\n\n  const theme = createMuiTheme({\n    palette: {\n      common: {\n        blue: `${arcBlue}`,\n        orange: `${arcOrange}`,\n      },\n      primary: {\n        main: `${arcBlue}`,\n      },\n      secondary: {\n        main: `${arcOrange}`,\n      },\n      type: paletteType,\n    },\n    overrides: {\n      MuiTableCell: {\n        head: {\n          fontSize: \"1rem\",\n          fontWeight: 700,\n          color: arcOrange,\n          borderColor: arcOrange,\n        },\n      },\n    },\n  });\n\n  const handleThemeChange = () => {\n    setDarkState(!darkState);\n  };\n\n  const [globalHashTags, setGlobalHashTags] = useLocalStorageState(\"hashtags\", [\n    { _id: \"0\", tag: \"health\", color: \"green\" },\n    { _id: \"1\", tag: \"love\", color: \"red\" },\n    { _id: \"2\", tag: \"personal\", color: \"teal\" },\n    { _id: \"3\", tag: \"family\", color: \"lime\" },\n    { _id: \"4\", tag: \"academic\", color: \"blue\" },\n  ]);\n  const [goals, setGoals] = useLocalStorageState(\"goals\", [\n    {\n      _id: uuidv4(),\n      name: \"Eat breakfast\",\n      description:\n        \"buy oatmeal, Greentea and dry fruits from the local grocery store\",\n      timeAdded: new Date(),\n      duration: 1000,\n      isActive: false,\n      hashTags: {\n        2: { _id: \"2\", tag: \"personal\", color: \"teal\" },\n        4: { _id: \"4\", tag: \"academic\", color: \"blue\" },\n      },\n    },\n    {\n      _id: uuidv4(),\n      name: \"Task Completion\",\n      description: \"Last day to submit the task\",\n      timeAdded: new Date(),\n      duration: 2000,\n      isActive: false,\n      hashTags: {\n        0: { _id: \"0\", tag: \"health\", color: \"green\" },\n        1: { _id: \"1\", tag: \"love\", color: \"red\" },\n      },\n    },\n  ]);\n  return (\n    <div>\n      <CssBaseline />\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <ElevationScroll {...props}>\n          <AppBar>\n            <Toolbar>\n              <Typography variant=\"h6\">Done Today Itself</Typography>\n              <div className={classes.navItemsRight}>\n                <Button\n                  type=\"contained\"\n                  color=\"secondary\"\n                  onClick={() => {\n                    history.push(\"/statistics\");\n                  }}\n                >\n                  Stats\n                </Button>\n                <IconButton\n                  aria-label=\"toggle dark mode\"\n                  aria-controls=\"menu-appbar\"\n                  aria-haspopup=\"false\"\n                  onClick={handleThemeChange}\n                  color=\"inherit\"\n                >\n                  {darkState ? <Brightness7Icon /> : <Brightness4Icon />}\n                </IconButton>\n              </div>\n            </Toolbar>\n          </AppBar>\n        </ElevationScroll>\n        <Toolbar />\n        <Container>\n          <Box my={2}>\n            <Switch>\n              <Route\n                path=\"/\"\n                exact\n                render={(routeProps) => (\n                  <>\n                    <NewGoalForm\n                      setGoals={setGoals}\n                      globalHashTags={globalHashTags}\n                    />\n                    <GoalList\n                      goals={goals}\n                      setGoals={setGoals}\n                      globalHashTags={globalHashTags}\n                    />\n                  </>\n                )}\n              />\n              <Route\n                path=\"/statistics\"\n                exact\n                render={(routeProps) => <Chart goals={goals} />}\n              />\n            </Switch>\n          </Box>\n        </Container>\n      </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n\n"],"sourceRoot":""}